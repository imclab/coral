#!/usr/bin/env bash
# Usage: coral checkout <repo-name> <version>
# Summary: Create a new working copy for a repo
# Help: Creates a new working copy for a repository in Coral. The new repo is
# named '<repo>@<version>' and, altough it's a separate directory, it shares
# the same git repo as the original working copy. This is achieved by magic.
#
# If <version> corresponds to a git tag, branch, or remote, the new working
# copy will be switched to the corresponding git revision.

set -e
[ -n "$CORAL_DEBUG" ] && set -x

[ "$1" = "--complete" ] && exec coral-list --complete

origin="$(coral-path "$1")"
workdir="${CORAL_ROOT}/repos/${1%@*}@${2}"

coral-git-workdir "$origin" "$workdir" >/dev/null

cd "$workdir"

if git rev-parse --quiet --verify "$2" >/dev/null; then
  git checkout --quiet "$2"
elif git rev-parse --quiet --verify "origin/${2}" >/dev/null; then
  git checkout --track "origin/${2}"
elif git remote | grep -x "$2" >/dev/null; then
  git checkout --track -b "$2" "${2}/master"
else
  git checkout -f HEAD
fi
