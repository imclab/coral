#!/usr/bin/env bash
set -e
[ -n "$CORAL_DEBUG" ] && set -x

# content from single commented line marked with a word such as "Usage" or "Summary"
extract_line() {
  grep "^# ${1}:" "$2" | head -1 | cut -d ' ' -f3-
}

# content of multiple consecutive commented lines starting with a word such as "Help"
extract_section() {
  sed -En "/^# ${1}: /,/^[^#]/s/^# ?//p" "$2" | sed "1s/${1}: //"
}

print_summaries() {
  for command in $(coral-commands -v); do
    print_summary "$command"
  done
}

# print aligned command names with help summary
print_summary() {
  if [ ! -h "$1" ]; then
    local summary=$(extract_line Summary "$1")
    if [ -n "$summary" ]; then
      local name=$(basename "$1")
      echo "${name#coral-}" | awk '{ printf "   %-20s   ", $1 }'
      echo -n $summary
      echo
    else
      return 1
    fi
  fi
}

print_help() {
  local usage="$(extract_line Usage "$1")"
  local halp="$(extract_section Help "$1")"
  [ -z "$halp" ] && halp="$(extract_line Summary "$1")"

  if [ -n "$usage" ]; then
    echo Usage: $usage
    [ -n "$halp" ] && echo && echo "$halp"
  else
    echo "Sorry, this command isn't documented yet." >&2
    return 1
  fi
}

# Provide sub completions
if [ "$1" = "--complete" ]; then
  exec "coral-commands"
  exit
fi

case "$1" in
"") echo "Usage: coral <command> [<args>]

Some useful sub commands are:
$(print_summaries)

See 'coral help <command>' for information on a specific command."
;;
*)
  command_path="$(command -v "coral-$1" || true)"
  if [ -n "$command_path" ]; then
    print_help "$(which "$command_path")"
  else
    echo "coral: no such command \`$1'" >&2
    exit 1
  fi
esac
