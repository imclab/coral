#!/usr/bin/env ruby
# Usage: coral github-markup ( <file> | -f <filename> )
# Summary: Render markup to HTML
# Help: Renders markup from Markdown, Textile, RDoc, and other types of files
# the same way it is done on GitHub.com.
#
# If `-f <filename>` is given, read data from STDIN instead of a file. The
# filename is used to specify markup format; e.g. ".md".

file = ARGV[0]
file = ARGV.shift && ARGV.shift if "-f" == file

abort "usage: #$0 <file>" unless file

old_level, $-w = $-w, nil

begin
  require 'github/markup'
  require 'html/pipeline'
rescue LoadError
  unless defined? Gem
    require 'rubygems'
    retry
  else
    $stderr.puts "#$0: " + $!.message
    exit 2
  end
ensure
  $-w = old_level
end

mdown_pipeline = HTML::Pipeline.new [
  HTML::Pipeline::MarkdownFilter,
  HTML::Pipeline::SanitizationFilter,
  HTML::Pipeline::ImageMaxWidthFilter,
  HTML::Pipeline::AutolinkFilter,
  HTML::Pipeline::TableOfContentsFilter,
  HTML::Pipeline::SyntaxHighlightFilter,
], :gfm => false, :detect_syntax => false

GitHub::Markup.markup('github/markdown', /md|mkdn?|mdown|markdown/) do |content|
  result = mdown_pipeline.call content
  result[:output]
end

puts GitHub::Markup.render(file, ARGF.read)
