#!/usr/bin/env bash
## Create a new directory and make it a working copy of an existing git repo by
# setting up necessary symlinks.
#
# based on https://github.com/git/git/blob/afa0876/contrib/workdir/git-new-workdir

set -e
[ -n "$CORAL_DEBUG" ] && set -x

die() {
  echo -e "$@" >&2
  exit 1
}

while [[ $# -gt 0 ]]; do
  case "$1" in
  --force | -f )
    force=1
    shift 1
    ;;
  --mv )
    move=1
    shift 1
    ;;
  -* )
    die "invalid flag: $1"
    ;;
  * )
    break
    ;;
  esac
done

origin="${1?}"
workdir="${2?}"

relative_link() {
  mkdir -p "$(dirname "$2")"
	ln -sfhv "$(relative_path "$(dirname "$2")" "$1")" "$2"
}

relative_path() {
  src="$1"
  dest="$2"
  rel=""
  until [[ ${dest:0:${#src}+1} = "${src}/" ]]; do
    src="$(dirname "$src")"
    [[ $src = / ]] && src=""
    rel="${rel}../"
  done

  if [[ -z $src ]]; then
    echo $dest
  else
    echo ${rel}${dest#${src}/}
  fi
}

[[ -z $force && -e $workdir ]] && die "destination ${workdir} already exists"

git_dir=$(cd "$origin" 2>/dev/null && git rev-parse --git-dir 2>/dev/null) || \
  die "not a git repository: ${origin}"

if [[ $git_dir = . ]]; then
  git_dir="$origin"
else
  git_dir="${origin}/${git_dir}"
fi

git_dir="$(cd "$git_dir" && pwd)"
workdir="$(mkdir -p "$workdir" && cd "$workdir" && pwd)"

[[ -h "${git_dir}/config" ]] && die "error: ${origin} is a working copy itself"

for item in config refs logs/refs objects info hooks packed-refs remotes rr-cache svn
do
  if [[ -z $move ]]; then
    relative_link "${git_dir}/${item}" "${workdir}/.git/${item}"
  else
    rm -f "${workdir}/.git/${item}"
    [[ -e "${git_dir}/${item}" ]] && \
      mv -v "${git_dir}/${item}" "${workdir}/.git/${item}"
  fi
done

for file in HEAD description; do
  src="${git_dir}/${file}"
  dest="${workdir}/.git/${file}"
  [[ -f $src && ! -f $dest ]] && cp -v "$src" "$dest"
done

exit 0
